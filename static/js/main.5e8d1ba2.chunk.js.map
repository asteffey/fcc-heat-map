{"version":3,"sources":["hooks/useD3.js","components/ScaledD3Container.js","d3-plus/index.js","components/GlobalTemp/d3.js","components/GlobalTemp/index.js","components/App.js","serviceWorker.js","index.js"],"names":["useD3","fn","ref","useRef","useEffect","d3","current","SvgContainer","styled","div","ScaledD3Container","drawSvg","viewBox","width","height","draw","useCallback","container","svg","append","attr","dsplus","tip","legendColor","selection","prototype","appendForEach","obj","data","this","selectAll","enter","forEach","action","each","datum","index","nodes","select","attrs","node","key","chartPadding","top","right","bottom","left","parse","baseTemperature","monthlyVariance","map","year","month","variance","temperature","yearExtent","d3plus","extent","years","cellHeight","cellWidth","Math","ceil","monthScale","scaleLinear","range","domain","yearScale","x","y","colorScale","scaleSequential","reverse","interpolateRdYlBu","toMonthName","d","Date","setUTCMonth","utcFormat","appendCells","chart","class","style","on","show","hide","appendBottomAxis","id","transform","call","axisBottom","ticks","tickFormat","format","tickSizeOuter","g","toYearTickId","toYearTickClass","tick","dx","dy","appendLeftAxis","axisLeft","toMonthTickId","appendYearGrid","tickSize","toYearGridId","appendMonthGrid","toMonthGridId","appendBorder","fill","stroke","appendCellOverlay","highlight","apply","arguments","unhighlight","classed","appendLegend","yOffset","orient","ascending","title","shape","shapePadding","shapeHeight","shapeWidth","padding","cells","labelFormat","scale","legend","getBBox","insert","d3Chart","svgWidth","svgHeight","paddedChart","json","then","rawData","offset","svgToPixel","svgUnit","getBoundingClientRect","isTipOver","direction","sign","html","toFixed","createTip","FullScreenContainer","marginTop","GlobalTemp","useDimensions","App","useFccTest","fccTest","FccTests","heat_map","queryParam","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e8d1ba2.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport { useRef, useEffect } from 'react';\n\nconst useD3 = (fn) => {\n    const ref = useRef();\n\n    useEffect(\n        () => fn(d3.select(ref.current)),\n        [fn]\n    );\n\n    return ref;\n};\n\nexport default useD3;","import React, { useCallback } from 'react';\nimport useD3 from '../hooks/useD3';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst SvgContainer = styled.div`\n    display: block;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    svg {\n        display: block;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nconst ScaledD3Container = ({ drawSvg, viewBox: { width = 100, height = 100 } }) => {\n    const draw = useCallback(container => {\n        const svg = container.append('svg')\n            .attr('preserveAspectRatio', 'xMidYMid meet')\n            .attr('viewBox', `0 0 ${width} ${height}`);\n\n        drawSvg(svg, width, height);\n    }, [drawSvg, width, height]);\n    \n    const ref = useD3(draw);\n\n    return (\n        <SvgContainer ref={ref} />\n    );\n};\n\nScaledD3Container.propTypes = {\n    drawSvg: PropTypes.func.isRequired,\n    viewBox: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number\n    })\n};\n\nexport default ScaledD3Container;","import * as d3 from 'd3';\nimport tip from 'd3-tip';\nimport { legendColor } from 'd3-svg-legend';\n\nconst dsplus = { ...d3, tip, legendColor };\n\ndsplus.selection.prototype.appendForEach = function (obj, data) { \n    return this.selectAll(null).data(data).enter().append(obj);\n};\n\n\ndsplus.selection.prototype.forEach = function (action) { \n    return this.each(function (datum, index, nodes) {\n        const selection = dsplus.select(this);\n        action(selection, datum, index, nodes);\n    });\n};\n\ndsplus.selection.prototype.attrs = function (attrs) { \n    if (typeof attrs === 'function') {\n        this.forEach((node, datum) =>\n            node.attrs(attrs(datum))\n        );\n    } else {\n        for (const key in attrs) {\n            this.attr(key, attrs[key]);\n        }\n    }\n    \n    return this;\n};\n\nexport default dsplus;\n","import d3plus from '../../d3-plus';\n\nconst dataUrl = 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/global-temperature.json';\nconst chartPadding = { top: 15, right: 35, bottom: 115, left: 80 };\n\nconst d3Chart = (svg, svgWidth, svgHeight) => {\n    const { chart, width, height } = paddedChart(svg, svgWidth, svgHeight, chartPadding);\n\n    d3plus.json(dataUrl)\n        .then(rawData => {\n            const data = new parse(rawData, width, height);\n            const tip = createTip(chart, data);\n            chart\n                .call(tip)\n                .call(appendCells, data, tip)\n                .call(appendBottomAxis, data)\n                .call(appendLeftAxis, data)\n                .call(appendYearGrid, data)\n                .call(appendMonthGrid, data)\n                .call(appendBorder, data)\n                .call(appendCellOverlay, data, tip)\n                .call(appendLegend, data);\n        });\n};\n\nfunction paddedChart(svg, svgWidth, svgHeight, { left, top, right, bottom }) {\n    svg.append('rect').attrs({\n        id: 'background',\n        x: 0,\n        y: 0,\n        width: svgWidth,\n        height: svgHeight\n    });\n\n    return {\n        chart: svg.append('g')\n            .attr('transform', `translate(${left}, ${top})`),\n        width: svgWidth - left - right,\n        height: svgHeight - right - bottom\n    };\n}\n\nfunction parse({ baseTemperature, monthlyVariance }, width, height) {\n    const data = monthlyVariance.map(({ year, month, variance }) => ({\n        year,\n        month: month - 1,\n        temperature: baseTemperature + variance\n    }));\n    const yearExtent = d3plus.extent(data, ({year}) => year);\n    const years = yearExtent[1] - yearExtent[0] + 1;\n    \n    const cellHeight = height / 12;\n    const cellWidth = Math.ceil(width / years);\n    \n    const monthScale = d3plus.scaleLinear()\n        .range([0, height - cellHeight])\n        .domain(d3plus.extent(data, ({ month }) => month));\n    const yearScale = d3plus.scaleLinear()\n        .range([0, width - cellWidth])\n        .domain(yearExtent);\n\n    data.forEach((datum) => {\n        datum.x = yearScale(datum.year);\n        datum.y = monthScale(datum.month);\n    });\n\n    return {\n        width,\n        height,\n        data,\n        years,\n        cellWidth,\n        cellHeight,\n        monthScale,\n        yearScale,\n        colorScale: d3plus.scaleSequential(\n            d3plus.extent(data, ({ temperature }) => temperature).reverse(),\n            d3plus.interpolateRdYlBu)\n    };\n}\n\nfunction createTip(chart, { cellWidth, width }) {\n    const offset = cellWidth * 4;\n\n    function svgToPixel(svgUnit) {\n        const pixelWidth = chart.node().getBoundingClientRect().width;\n        return svgUnit * pixelWidth / width;\n    }\n    \n    function isTipOver(x) {\n        const approxTipWidth = 150;\n        return (x + offset + approxTipWidth) > width;\n    }\n    \n    return d3plus.tip()\n        .direction(({x}) => isTipOver(x) ? 'w' : 'e')\n        .offset(({x}) => {\n            const sign = isTipOver(x) ? -1 : 1;\n            return [0, svgToPixel(offset) * sign];\n        })\n        .attr('id', 'tooltip')\n        .attr('data-year', ({ year }) => year)\n        .style('font-size', () => `${svgToPixel(15)}px`)\n        .html(({ year, month, temperature }) => `\n            ${toMonthName(month)} ${year}<br/>\n            ${temperature.toFixed(2)} &#8451;\n        `);\n}\n\nfunction toMonthName(month) {\n    const d = new Date(0);\n    d.setUTCMonth(month);\n    return d3plus.utcFormat('%B')(d);\n}\n\nfunction appendCells(chart, { data, cellWidth, cellHeight, colorScale }, tip) {\n    chart.appendForEach('rect', data)\n        .attrs(({ x, y, year, month, temperature }) => ({\n            class: 'cell',\n            x,\n            y,\n            width: cellWidth,\n            height: cellHeight,\n            'data-year': year,\n            'data-month': month,\n            'data-temp': temperature\n        }))\n        .style('fill', ({ temperature }) => colorScale(temperature))\n        .on('mouseover', tip.show) // here only to pass fcc test\n        .on('mouseout', tip.hide); // here only to pass fcc test\n}\n\nfunction appendBottomAxis(chart, { cellWidth, height, yearScale, years }) {\n    chart.append('g')\n        .attrs({\n            id: 'x-axis',\n            transform: `translate(${cellWidth / 2}, ${height})`\n        })\n        .call(d3plus\n            .axisBottom(yearScale)\n            .ticks(years)\n            .tickFormat(d3plus.format('d'))\n            .tickSizeOuter(0)\n        )\n        .call(g => g.selectAll('.tick')\n            .attrs({\n                id: toYearTickId,\n                'class': toYearTickClass\n            })\n            .call(tick => tick.select('text')\n                .style('text-anchor', 'end')\n                .attrs({\n                    dx: '1em',\n                    dy: '0.7em'\n                })\n            )\n        );\n}\n\n\nconst toYearTickId = year => `year-tick-${year}`;\nconst toYearTickClass = year => year % 10 === 0 ? 'tick' : 'tick hidden';\n\nfunction appendLeftAxis(chart, { cellHeight, monthScale }) {\n    chart.append('g')\n        .attrs({\n            id: 'y-axis',\n            transform: `translate(0, ${cellHeight / 2})`\n        })\n        .call(d3plus\n            .axisLeft(monthScale)\n            .tickFormat(toMonthName)\n        )\n        .call(g => g.selectAll('.tick')\n            .attrs({\n                id: toMonthTickId\n            })\n            .call(tick => tick.select('text')\n                .style('text-anchor', 'end')\n                .attrs({\n                    dx: '0.3em',\n                    dy: '-0.1em',\n                    transform: 'rotate(-45)'\n                })\n            )\n        );\n}\n\nconst toMonthTickId = month => `year-tick-${month}`;\n\nfunction appendYearGrid(chart, { yearScale, years, height }) {\n    chart.append('g')\n        .attrs({\n            id: 'year-grid',\n            transform: `translate(0, ${height})`\n        })\n        .call(d3plus\n            .axisBottom(yearScale)\n            .ticks(years)\n            .tickFormat('')\n            .tickSize(-height)\n        )\n        .call(g => g.selectAll('.tick').attrs({\n            'class': '',\n            id: toYearGridId\n        }));\n}\n\nconst toYearGridId = year => `year-grid-${year}`;\n\nfunction appendMonthGrid(chart, { monthScale, width }) {\n    chart.append('g')\n        .attrs({\n            id: 'month-grid',\n            transform: `translate(${width}, 0)`\n        })\n        .call(d3plus\n            .axisLeft(monthScale)\n            .tickFormat('')\n            .tickSize(width)\n        )\n        .call(g => g.selectAll('.tick').attrs({\n            'class': '',\n            id: toMonthGridId\n        }));\n}\n\nconst toMonthGridId = month => `year-grid-${month}`;\n\nfunction appendBorder(chart, { width, height }) {\n    chart.append('rect').attrs({\n        id: 'chart-border',\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        fill: 'none',\n        stroke: 'black'\n    });\n}\n\nfunction appendCellOverlay(chart, { data, cellWidth, cellHeight }, tip) {\n    chart.appendForEach('rect', data)\n        .attrs(({ x, y }) => ({\n            x,\n            y,\n            width: cellWidth,\n            height: cellHeight,\n            'fill-opacity': 0\n        }))\n        .on('mouseover', function () {\n            highlight.apply(this, arguments);\n            tip.show.apply(this, arguments);\n        })\n        .on('mouseout', function () {\n            unhighlight.apply(this, arguments);\n            tip.hide.apply(this, arguments);\n        });\n}\n\nfunction highlight({ month, year }) {\n    for (var y = year - 4; y <= year + 4; y++) {\n        d3plus.select(`#${toYearTickId(y)}`).classed('hidden', y !== year);\n    }\n    for (const id of [\n        toYearTickId(year),\n        toYearGridId(year),\n        toYearGridId(year + 1),\n        toMonthTickId(month),\n        toMonthGridId(month),\n        toMonthGridId(month + 1)\n    ]) {\n        d3plus.select(`#${id}`).classed('highlighted', true);\n    }\n}\n\nfunction unhighlight({ month, year }) {\n    for (var y = year - 4; y <= year + 4; y++) {\n        d3plus.select(`#${toYearTickId(y)}`).attr('class', toYearTickClass);\n    }\n    for (const id of [\n        toYearTickId(year),\n        toYearGridId(year),\n        toYearGridId(year + 1),\n        toMonthTickId(month),\n        toMonthGridId(month),\n        toMonthGridId(month + 1)\n    ]) {\n        d3plus.select(`#${id}`).classed('highlighted', false);\n    }\n}\n\nfunction appendLegend(svg, { colorScale, height, width }) {\n    const shapes = 40;\n    const yOffset = height + 60;\n    const padding = 10;\n\n    svg.append('g')\n        .attr('id', 'legend')\n        .style('font-size', '10px')\n        .call(d3plus.legendColor()\n            .orient('horizontal')\n            .ascending(true)\n            .title('Temperatures (℃)')\n            .shape('rect')\n            .shapePadding(0)\n            .shapeHeight(15)\n            .shapeWidth((width - padding * 2) / shapes)\n            .cells(shapes)\n            .labelFormat(d3plus.format('.1f'))\n            .scale(colorScale)\n        )\n        .call(legend => {\n            const { x, y, width, height } = legend.node().getBBox();\n            legend.attr('transform', `translate(${padding}, ${yOffset})`);\n            legend.insert('rect', '.legendCells').attrs({\n                id: 'legend-background',\n                x: x - padding,\n                y: y - padding,\n                width: width + padding * 2,\n                height: height + padding * 2\n            });\n        });\n}\n\nexport default d3Chart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ScaledD3Container from '../ScaledD3Container';\nimport d3Chart from './d3';\nimport './style.css';\nimport useDimensions from 'react-use-dimensions';\n\nconst FullScreenContainer = styled.div`\n    padding: 10px;\n    height: calc(100vh - ${({marginTop}) => `${marginTop}px`});\n`;\n\nconst GlobalTemp = () => {\n    const [ref, {height}] = useDimensions();\n\n    return (\n        <>\n            <h1 id='title' ref={ref}>Average Global Temperature</h1>\n            <h3 id='description' ref={ref}>Average Global Land-Surface Temperatures from 1753 to 2015</h3>\n            <FullScreenContainer marginTop={height + 100}>\n                <ScaledD3Container drawSvg={d3Chart} viewBox={{ width: 1600, height: 900 }} />\n            </FullScreenContainer>\n        </>\n    );\n};\n\nexport default GlobalTemp;\n","import React from 'react';\nimport GlobalTemp from './GlobalTemp';\nimport { useFccTest, FccTests } from '@asteffey/react-fcc-test';\n\nconst App = () => {\n    useFccTest({\n        fccTest: FccTests.heat_map,\n        queryParam: 'fcc-test'\n    });\n\n    return (\n        <main>\n            <GlobalTemp />\n        </main>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}